version: '3.8'
services:
  mysql:
    container_name: mysql
    image: mysql:8.0.32
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_ROOT_PASSWORD: null
      MYSQL_DATABASE: operationaldb
      MYSQL_MAX_CONNECTIONS: 10000
    ports:
      - "3306:3306"
    expose:
      - 3306
    networks:
      - my-network
    command: --max-connections=10000
    healthcheck:
      test: [ "CMD", "bash", "-c", "if [ -z $$(mysqladmin -h localhost ping 2>/dev/null) ]; then exit 1; fi" ]
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 10s

  blazegraph:
    image: conjecto/blazegraph
    container_name: blazegraph
    environment:
      JAVA_OPTS: "-Xms512m -Xmx2g"
    volumes:
      - ./blazegraph-data:/var/lib/blazegraph
      - ./data:/docker-entrypoint-initdb.d/kb/data
    ports:
      - "9999:9999"
    expose:
      - 9999
    networks:
      - my-network
    healthcheck:
      test: [ "CMD", "bash", "-c", "curl -f http://localhost:9999/blazegraph/ || exit 1" ]
      interval: 5s
      timeout: 20s
      retries: 10
      start_period: 15s

  dkg-evm-module:
    build:
      context: .
      dockerfile: dkg-evm-module.Dockerfile
    container_name: hardhat-network
    ports:
      - "8545:8545"  # ot-node-docker application port
      - "9545:9545"  # ot-node-docker application port
    expose:
      - 8545
      - 9545
    working_dir: /app/dkg-evm-module
    command: >
      /bin/sh -c "
      npm run dev:v1 -- --port 8545 &
      npm run dev:v1 -- --port 9545 &
      wait
      "
    networks:
      - my-network

  ot-node:
    build:
      context: .
      dockerfile: ot-node.Dockerfile
    container_name: ot-node
    ports:
      - "8900:8900"  # ot-node-docker application port
      - "8901:8901"  # ot-node-docker application port
      - "8902:8902"  # ot-node-docker application port
      - "8903:8903"  # ot-node-docker application port
      - "8904:8904"  # ot-node-docker application port
      - "8905:8905"  # ot-node-docker application port
      - "8906:8906"  # ot-node-docker application port
      - "8907:8907"  # ot-node-docker application port
    environment:
      - NODE_ENV=development
    networks:
      - my-network
    depends_on:
      - mysql
      - blazegraph
      - dkg-evm-module
    working_dir: /app/ot-node-docker  # Ensure the working directory is set to /app/ot-node-docker
    entrypoint: [ "/bin/sh", "-c", "/bin/sleep 25 && chmod +x ./tools/local-network-setup/setup-linux-environment.sh && ./tools/local-network-setup/setup-linux-environment.sh --nodes=8" ]

  ui:
    build:
      context: .
      dockerfile: ui.Dockerfile
    container_name: ui
    working_dir: /app/ui
    depends_on:
      - ot-node
      - dkg-evm-module
    command: ["/bin/sh", "-c", "npm run build && npx http-server dist/app -p 4200 --cors"]
    environment:
      - NODE_ENV=production
      - NG_CLI_ANALYTICS=false
    networks:
      - my-network

  nginx:
    build:
      context: .
      dockerfile: nginx.Dockerfile
    container_name: nginx-proxy
    ports:
      - "443:443"
    volumes:
      - nginx-certs:/etc/nginx/certs
    depends_on:
      - ui
    networks:
      - my-network
networks:
  my-network:
    driver: bridge

volumes:
  nginx-certs: